using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Zadanie3
{
    public class FromMethods
    {
       
        public static List<Product> GetProductsByName(string namePart)
        {
            using (DataClasses1DataContext db = new DataClasses1DataContext())
            {
                List<Product> query = (from x in db.Products
                            where x.Name.Contains(namePart)
                            select x).ToList();

                foreach (var x in query)
                {
                    Console.WriteLine(x);
                }


                return query;

               
            }
        }


        public static List<Product> GetProductsWithNRecentReviews(int howManyReviews)
        {
            using (DataClasses1DataContext db = new DataClasses1DataContext())
            {
                List<int> productIds = (from product in db.ProductReviews
                                        join productReviews in db.ProductReviews
                                        on product.ProductID equals productReviews.ProductID
                                        group product by product.ProductID into groupedProducts
                                        where groupedProducts.Count() >= howManyReviews
                                        select groupedProducts.Key).ToList();

                List<Product> productsThatHaveReview = db.Products.Where(p => productIds.Contains(p.ProductID)).ToList();

                foreach (var x in productsThatHaveReview)
                {
                    Console.WriteLine(x.Name + " " + x.ProductID);
                }

                return productsThatHaveReview;
            }
        }


        public static List<Product> GetNRecentlyReviewedProducts(int howManyProducts)
        {
            using (DataClasses1DataContext db = new DataClasses1DataContext())
            {
                List<Product> query = (from product in db.Products
                                       join productreviews in db.ProductReviews
                                       on product.ProductID equals productreviews.ProductID
                                       orderby productreviews.ReviewDate
                                       select product).Take(howManyProducts).ToList();

                foreach (var x in query)
                {
                    Console.WriteLine(x.ProductID);
                }

                return query;


            }

        }



    }
}

